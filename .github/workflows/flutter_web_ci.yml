name: Deploy web build.
on:
  push:
    branches:
      - master
      - dev_two

jobs:
  build_web:
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Write google-services.json file
        run: |
          cd android/app
          echo $GOOGLE_SERVICES | base64 -d > google-services.json
        shell: bash
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

      - name: Write .env file
        run: |
          echo $ENV | base64 -d > .env
        shell: bash
        env:
          ENV: ${{ secrets.ENV }}

      - name: Write key.properties file
        run: |
          echo $KEY_PROPERTIES | base64 -d > android/key.properties
        shell: bash
        env:
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}

      - name: Create keystore folder
        run: mkdir -p android/keystore

      - name: Write weather_fit_release.keystore file
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        run: |
          echo $RELEASE_KEYSTORE | base64 --decode > android/keystore/weather_fit_release.keystore

      - name: Write weather_fit_debug.keystore file
        run: |
          echo $DEBUG_KEYSTORE | base64 -d > android/keystore/weather_fit_debug.keystore
        shell: bash
        env:
          DEBUG_KEYSTORE: ${{ secrets.DEBUG_KEYSTORE }}


      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter pub get

      - name: Write env.g.dart file
        run: |
          dart run build_runner build --delete-conflicting-outputs
        shell: bash

      - run: flutter config --enable-web
      - run: flutter build web
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: web-build
          path: build/web
  deploy_web:
    name: Deploy Web to Firebase Hosting
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web-build
          path: web-build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@13.5.0
        with:
          args: deploy --only hosting --public web-build
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: weather-fit-ai