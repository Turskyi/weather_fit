name: weather_fit
description: "WeatherFit is more than just a weather app, it’s a personal stylist that helps you 
dress well and stay comfortable. Whether you’re going to work, school, or a party, WeatherFit will 
show you the best outfit for any weather condition.  Just enter your location or use GPS, and 
WeatherFit will display the current weather and a full-height image of a person wearing a suitable 
outfit. You can customize the image according to your preferences (in development), such as age, 
gender, skin tone, hair color, etc. This way, the image will be more personalized and relevant to 
you. You can also see the forecast for the next few days and get outfit recommendations for each 
day. You can choose from different styles and categories of outfits, such as casual, formal, 
sporty, etc. WeatherFit will also give you tips and advice on how to accessorize and layer your 
clothes.  WeatherFit is your smart and stylish weather companion. Download it now and never worry 
about what to wear again. 🌤️👕👖👞"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.1+1

environment:
  sdk: '>=3.2.6 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  bloc: ^8.1.3
  dart_openai: ^5.1.0
  envied: ^0.5.3
  equatable: ^2.0.5
  flutter:
    sdk: flutter
  flutter_bloc: ^8.1.4
  geocoding: ^2.2.0
  geolocator: ^11.0.0
  google_fonts: ^6.2.1
  home_widget: ^0.4.1
  hydrated_bloc: ^9.1.4
  intl: ^0.19.0
  json_annotation: ^4.8.1
  nested: ^1.0.0
  path_provider: ^2.1.2
  permission_handler: ^11.3.0
  weather_repository:
    path: packages/weather_repository

dev_dependencies:
  bloc_test: ^9.1.6
  build_runner: ^2.4.8
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  envied_generator: ^0.5.3
  flutter_lints: ^3.0.1
  flutter_test:
    sdk: flutter
  json_serializable: ^6.7.1
  mocktail: ^1.0.3

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  #  assets:
  #   - assets/
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
